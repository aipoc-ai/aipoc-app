[{"C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\index.js":"1","C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\App.js":"2","C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\reportWebVitals.js":"3","C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\About.js":"4","C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\Home.js":"5","C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\Navcomp.js":"6","C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\Tasklist.js":"7"},{"size":517,"mtime":1633792590084,"results":"8","hashOfConfig":"9"},{"size":664,"mtime":1633792590068,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1633792590209,"results":"11","hashOfConfig":"9"},{"size":691,"mtime":1633792590068,"results":"12","hashOfConfig":"9"},{"size":4328,"mtime":1633860448748,"results":"13","hashOfConfig":"9"},{"size":867,"mtime":1633792590084,"results":"14","hashOfConfig":"9"},{"size":1252,"mtime":1633792590084,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1adz0bj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\index.js",[],["33","34"],"C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\App.js",[],"C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\reportWebVitals.js",[],"C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\About.js",[],"C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\Home.js",["35"],"import React from 'react'\r\nimport \"./style.css\"\r\nimport logo from \"../pics/logo.svg\"\r\nimport load from \"../pics/load.gif\"\r\nimport io from \"socket.io-client\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isloding:true,\r\n            api_info:[{\r\n              \"id\":1, \r\n              \"status\":false,\r\n              \"temp\":\"_\",\r\n              \"con_speed\":\"_\",\r\n              \"cpu\":\"_\",\r\n              \"camera\":false,\r\n              \"ir\":false\r\n          }],\r\n            error:null,\r\n            intervalID:null,\r\n            questions:[],\r\n            ques_error:null,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n      const socket = io(\"http://127.0.0.1:5000\");\r\n      socket.on('connect', function() {\r\n        console.log(\"Connected to WS server\");\r\n      \r\n        console.log(socket.connected); \r\n      \r\n      });\r\n      socket.on('message', (data) => {\r\n        \r\n        this.setState({api_info:[data]});\r\n      });\r\n      socket.on('disconnect', ()=> {\r\n        console.log(\"disconnected to WS server\");\r\n        let data = [{\r\n          \"id\":1, \r\n          \"status\":false,\r\n          \"temp\":\"_\",\r\n          \"con_speed\":\"_\",\r\n          \"cpu\":\"_\",\r\n          \"camera\":false,\r\n          \"ir\":false\r\n        }]\r\n        this.setState({api_info:data});\r\n        \r\n        console.log(socket.connected); \r\n      \r\n      });\r\n    }\r\n    render() {\r\n        const { isLoading, api_info, error } = this.state;\r\n        return (\r\n        <div>\r\n\r\n            <h1>{error ? <p  className=\"error\">{error.message}.try again!!</p> : null}</h1>\r\n\r\n            {true ? (\r\n              api_info.map(info => {\r\n                const {id, status,temp,con_speed,cpu,camera,ir } = info;\r\n                return (\r\n                  <div key={id}>\r\n                    \r\n                    <div className=\"online\">\r\n                        <img alt=\"logo\" width=\"150px\" src={logo}/>\r\n                        {status?<h1 className=\"online_status\"><button class='oncircle'></button>online</h1>:<h1 className=\"online_status\"><button class='offcircle'></button>offline</h1>}\r\n                    </div>\r\n                    <div className=\"questions\">\r\n                        <div className=\"box_text\">\r\n                            <h1 className=\"recent_questions\">Recent questions?</h1>\r\n                            <div className=\"ques_ans\">\r\n                              {this.state.ques_error ? <p  className=\"error\">{this.state.error.message}.try again!!</p> : null}\r\n                              {this.state.questions.map((ques)=>(\r\n                                <h1 key={ques.id} className=\"ques_info\">{ques.asked_ques}</h1>\r\n                              ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"information_right\">\r\n                        <div className=\"box_text\">\r\n                            <h1 className=\"recent_questions\">CPU informations?</h1>\r\n                            <div className=\"cpu_info\">\r\n                                <h1 className=\"cpu_info_head\">Temperature:</h1>\r\n                                <h1 className=\"cpu_info_right\">{status?temp:\"--\"}&deg;F</h1>\r\n                                <h1 className=\"cpu_info_head\">Camera:</h1>\r\n                                <h1 className=\"cpu_info_right\">{status&&camera?\"Detected\":\"Not detected\"}</h1>\r\n                                <h1 className=\"cpu_info_head\">IR Sensor:</h1>\r\n                                <h1 className=\"cpu_info_right\">{status&&ir?\"Detected\":\"Not detected\"}</h1>\r\n                                <h1 className=\"cpu_info_head\">Connection Speed:</h1>\r\n                                <h1 className=\"cpu_info_right\">{status?con_speed:\"--\"} Kbps</h1>\r\n                                <h1 className=\"cpu_info_head\">CPU Usage:</h1>\r\n                                <h1 className=\"cpu_info_right\">{status?cpu:\"--\"}%</h1>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })\r\n            ) : \r\n              <h3 className=\"loding\"><img className=\"load\" alt=\"loading...\" src={load}/></h3>}\r\n        </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\Navcomp.js",[],["36","37"],"C:\\Users\\Deepanshu\\Desktop\\aipoc-app\\aipoc\\src\\components\\Tasklist.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":57,"column":17,"nodeType":"44","messageId":"45","endLine":57,"endColumn":26},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]